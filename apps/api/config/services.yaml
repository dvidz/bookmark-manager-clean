# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Api\:
        resource: '../src'

    Api\Bookmark\Controller\:
        resource: '../src/Bookmark/Controller'
        tags: [ 'controller.service_arguments' ]

    Api\Human\Controller\:
        resource: '../src/Human/Controller'
        tags: [ 'controller.service_arguments' ]

    Dvidz\:
        resource: '../../../src/Dvidz'

    Dvidz\Shared\Infrastructure\Symfony\Controller\:
        resource: '../../../src/Dvidz/Shared/Infrastructure/Symfony/Controller'
        tags: [ 'controller.service_arguments' ]


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Embed\Embed:

    ###> REPOSITORY ###
    Dvidz\Bookmark\Domain\Repository\BookmarkRepository: '@Api\Bookmark\Repository\BookmarkRepository'
    ##################

    ### BUS ###
    _instanceof:
        # All services implementing the CommandHandler interface from the domain
        # will be registered on the command.bus bus who he's apply the transactional middleware "doctrine_transaction".
        # @see apps/api/config/package/messenger.yaml
        Dvidz\Shared\Domain\Command\CommandHandler:
            tags:
                - { name: messenger.message_handler, bus: command.bus }

        # All services implementing the QueryHandler interface from the domain
        # will be registered on the query.bus bus who he's apply the stack middleware dedicated to query.bus.
        # @see apps/api/config/package/messenger.yaml
        Dvidz\Shared\Domain\Query\QueryHandler:
            tags:
                - { name: messenger.message_handler, bus: query.bus }
